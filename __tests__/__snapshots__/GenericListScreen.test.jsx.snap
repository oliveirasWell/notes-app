// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GenericListScreen /> matches snapshot 1`] = `
<View
  style={
    {
      "backgroundColor": "#FFFFFF",
      "flex": 1,
      "flexDirection": "column",
      "padding": 16,
    }
  }
>
  <View
    style={
      {
        "alignItems": "center",
        "backgroundColor": "#D9EFFF",
        "flexDirection": "row",
        "justifyContent": "center",
        "padding": 16,
        "width": "100%",
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
    >
      <Text
        style={
          {
            "textAlign": "right",
          }
        }
      >
        Back
      </Text>
    </View>
    <View
      style={
        {
          "alignItems": "center",
          "flex": 1,
        }
      }
    >
      <Text
        style={
          {
            "color": "#0C8CE9",
            "fontFamily": "Inter-Bold",
            "fontSize": 20,
            "fontWeight": "700",
            "lineHeight": 24,
          }
        }
      >
        Test Header
      </Text>
    </View>
  </View>
  <RCTScrollView
    ItemSeparatorComponent={[Function]}
    data={
      [
        {
          "active": false,
          "name": "Item 1",
        },
        {
          "active": true,
          "name": "Item 2",
        },
      ]
    }
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    stickyHeaderIndices={[]}
    style={
      {
        "flex": 1,
      }
    }
    viewabilityConfigCallbackPairs={[]}
  >
    <View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              {
                "alignContent": "center",
                "flexDirection": "row",
                "padding": 16,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    {
                      "backgroundColor": "#FFFFFF",
                      "borderColor": "#000000",
                      "borderRadius": 15,
                      "borderWidth": 1,
                      "height": 30,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                numberOfLines={0}
                style={
                  {
                    "alignSelf": "flex-start",
                    "color": "#000000",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 16,
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 19,
                    "marginLeft": 8,
                  }
                }
              >
                Item 1
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              >
                <Text
                  numberOfLines={0}
                  style={
                    {
                      "alignSelf": "flex-end",
                      "color": "#0C8CE9",
                      "fontFamily": "Inter-Bold",
                      "fontSize": 14,
                      "fontWeight": "700",
                      "letterSpacing": 0,
                      "lineHeight": 16.8,
                      "textDecorationLine": "underline",
                    }
                  }
                >
                  Remove item
                </Text>
              </View>
            </View>
          </View>
        </View>
        <View
          style={
            {
              "backgroundColor": "#BDC5D0",
              "height": 1,
              "width": "100%",
            }
          }
        />
      </View>
      <View
        onFocusCapture={[Function]}
        onLayout={[Function]}
        style={null}
      >
        <View
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": undefined,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
        >
          <View
            style={
              {
                "alignContent": "center",
                "flexDirection": "row",
                "padding": 16,
              }
            }
          >
            <View
              accessibilityState={
                {
                  "busy": undefined,
                  "checked": undefined,
                  "disabled": undefined,
                  "expanded": undefined,
                  "selected": undefined,
                }
              }
              accessibilityValue={
                {
                  "max": undefined,
                  "min": undefined,
                  "now": undefined,
                  "text": undefined,
                }
              }
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
            >
              <View
                style={
                  [
                    {
                      "alignItems": "center",
                      "justifyContent": "center",
                    },
                    {
                      "backgroundColor": "#0C8CE9",
                      "borderColor": false,
                      "borderRadius": 15,
                      "borderWidth": false,
                      "height": 30,
                      "width": 30,
                    },
                  ]
                }
              />
            </View>
            <View
              style={
                {
                  "alignItems": "center",
                  "flex": 1,
                  "flexDirection": "row",
                  "justifyContent": "space-between",
                }
              }
            >
              <Text
                numberOfLines={0}
                style={
                  {
                    "alignSelf": "flex-start",
                    "color": "#000000",
                    "fontFamily": "Inter-Bold",
                    "fontSize": 16,
                    "fontWeight": "700",
                    "letterSpacing": 0,
                    "lineHeight": 19,
                    "marginLeft": 8,
                  }
                }
              >
                Item 2
              </Text>
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
              >
                <Text
                  numberOfLines={0}
                  style={
                    {
                      "alignSelf": "flex-end",
                      "color": "#0C8CE9",
                      "fontFamily": "Inter-Bold",
                      "fontSize": 14,
                      "fontWeight": "700",
                      "letterSpacing": 0,
                      "lineHeight": 16.8,
                      "textDecorationLine": "underline",
                    }
                  }
                >
                  Remove item
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
  <View>
    <View
      style={
        {
          "alignItems": "center",
          "backgroundColor": "#D9EFFF",
          "flexDirection": "row",
          "justifyContent": "center",
          "padding": 16,
          "width": "100%",
        }
      }
    >
      <View
        style={
          {
            "alignItems": "center",
            "flex": 1,
          }
        }
      >
        <Text
          style={
            {
              "color": "#0C8CE9",
              "fontFamily": "Inter-Bold",
              "fontSize": 20,
              "fontWeight": "700",
              "lineHeight": 24,
            }
          }
        >
          Add New Item
        </Text>
      </View>
    </View>
    <View>
      <View
        style={
          {
            "flexDirection": "row",
            "paddingTop": 8,
          }
        }
      >
        <Text
          style={
            {
              "color": "#000000",
              "fontFamily": "Inter-Regular",
              "fontSize": 12,
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 14,
              "marginBottom": 5,
              "textAlign": "left",
            }
          }
        >
          Name
        </Text>
        <Text
          style={
            {
              "color": "#F63737",
              "fontFamily": "Inter-Regular",
              "fontSize": 12,
              "fontWeight": "500",
              "letterSpacing": 0,
              "lineHeight": 14,
              "marginBottom": 5,
              "textAlign": "left",
            }
          }
        >
          *
        </Text>
      </View>
      <TextInput
        editable={true}
        numberOfLines={1}
        onChangeText={[Function]}
        placeholder="New Name"
        style={
          {
            "borderColor": "#BDC5D0",
            "borderRadius": 8,
            "borderWidth": 1,
            "color": "#666666",
            "padding": 10,
          }
        }
        value=""
      />
    </View>
    <View
      style={
        {
          "marginTop": 80,
        }
      }
    >
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": true,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
      >
        <View
          style={
            {
              "backgroundColor": "#0C8CE9",
              "borderRadius": 30,
              "paddingHorizontal": 14,
              "paddingVertical": 20,
              "width": "100%",
            }
          }
        >
          <Text
            style={
              {
                "color": "#FFFFFF",
                "fontFamily": "Inter-Regular",
                "fontSize": 16,
                "fontWeight": "700",
                "letterSpacing": 0,
                "lineHeight": 19,
                "textAlign": "center",
              }
            }
          >
            Add
          </Text>
        </View>
      </View>
    </View>
  </View>
</View>
`;
